################################################################################
# This role installs the Oracle Database 11g software
################################################################################

### COPY and extract oracle distrib

- name: Create folder for installation files
  become: yes
  become_method: sudo
  become_user: root

  file: state=directory path={{ INSTALL_PATH }}

- name: Check that the installer archive exists
  become: yes
  become_method: sudo
  become_user: root

  stat:
    path: '{{ INSTALL_PATH }}/{{ ORACLE_ARCHIVE }}.tar.gz'
  register: stat_inst_result


- name: Copy installer files
  become: yes
  become_method: sudo
  become_user: root

  copy: 
    src={{ ORACLE_ARCHIVE }}.tar.gz 
    dest='{{ INSTALL_PATH }}' 
    force=no
  when: stat_inst_result.stat.exists == False

- name: Check that the tar exists
  become: yes
  become_method: sudo
  become_user: root

  stat:
    path: '{{ INSTALL_PATH }}/{{ ORACLE_ARCHIVE }}.tar'
  register: stat_result

- name: Extract tar installation files if not exists
  become: yes
  become_method: sudo
  become_user: root

  command: chdir={{ INSTALL_PATH }}  gunzip {{ ORACLE_ARCHIVE }}.tar.gz
  when: stat_result.stat.exists == False 

- name: Check that the oracle home exists
  become: yes
  become_method: sudo
  become_user: root

  stat:
    path: '{{ INSTALL_PATH }}/dbhome_1'
  register: stat_result_home

- name: Extract tar to oracle_home
  become: yes
  become_method: sudo
  become_user: root

  unarchive:
    src: '{{ INSTALL_PATH }}/{{ ORACLE_ARCHIVE }}.tar'
    dest: '{{ INSTALL_PATH }}'
    remote_src: yes
  when: stat_result_home.stat.isdir is not defined 
##  command: chdir={{ INSTALL_PATH }} tar -xvf {{ ORACLE_ARCHIVE }}.tar

- name: Set owner for ORACLE_BASE
  become: yes
  become_method: sudo
  become_user: root
  file:
    path: '{{ INSTALL_ORA_BASE }}'
    owner: oracle
    group: oinstall
    recurse: yes

#  when: stat_result_home.stat.isdir is not defined 
  #command: chown -R oracle:oinstall {{ INSTALL_ORA_BASE }}


#- name: Set owner for inventory
#  become: yes
#  become_method: sudo
#  become_user: root
#  file:
#    path: '/opt/oraInventory'
#    state: directory
#    mode: 0755    
#    owner: oracle
#    group: oinstall
  
- name: copy oraInst.loc
  become: yes
  become_method: sudo
  become_user: root
  copy: 
    src: oraInst.loc 
    dest: '{{ INSTALL_PATH }}/dbhome_1' 
    force: yes
    owner: oracle
    group: oinstall

- name: copy oraInst.loc
  become: yes
  become_method: sudo
  become_user: root
  copy: 
    src: oraInst.loc 
    dest: '/etc' 
    force: yes
    owner: oracle
    group: oinstall
    
# В этом файле нужно менять ORACLE_HOME !!!    
#- name: copy cs.properties
#  become: yes
#  become_method: sudo
#  become_user: root
#  copy: 
#    src: cs.properties 
#    dest: '{{ INSTALL_PATH }}/dbhome_1/clone/config' 
#    force: yes
#    owner: oracle
#    group: oinstall


### RUN installer

- name: start clone oracle home
  command: chdir={{ INSTALL_PATH }}/dbhome_1/clone/bin {{ INSTALL_PATH }}/dbhome_1/perl/bin/perl {{ INSTALL_PATH }}/dbhome_1/clone/bin/clone.pl ORACLE_BASE="{{ INSTALL_ORA_BASE }}/" ORACLE_HOME="{{ INSTALL_PATH }}/dbhome_1" OSDBA_GROUP=dba OSOPER_GROUP=dba -defaultHomeName
  become: true
  become_user: oracle
  when: stat_result_home.stat.isdir is not defined 


- name: run root script root.sh
  become: yes
  become_method: sudo
  become_user: root

  command: '{{ INSTALL_PATH }}/dbhome_1/root.sh'
  #when: stat_result_home.stat.isdir is not defined 



### ORAENV file

- name: Check that the oraenv exists
  become: yes
  become_method: sudo
  become_user: root

  stat:
    path: '/home/oracle/.oraenv.{{ DB_NAME }}.sh'
  register: stat_oraenv_result

- name: Generate the oraenv file
  template: src=oraenv.sh dest=/home/oracle/.oraenv.{{ DB_NAME }}.sh
  become: true
  become_user: oracle
  when: stat_oraenv_result.stat.exists == False 

- name: Change mode the oraenv file
  become: yes
  become_method: sudo
  become_user: root

  file:
    path: /home/oracle/.oraenv.{{ DB_NAME }}.sh
    mode: "u+rwx"
  when: stat_oraenv_result.stat.exists == False 
#  command: 'chmod u+x /home/oracle/.oraenv.{{ DB_NAME }}.sh'

- name: Create .bash_profile if not exists
  become: yes
  become_method: sudo
  become_user: root

  file:
    path: /home/oracle/.bash_profile
    state: touch
    owner: oracle
    group: oinstall
  when: stat_oraenv_result.stat.exists == False 

- name: add to /home/oracle/.bash_profile
  become: yes
  become_method: sudo
  become_user: root

  blockinfile:
    owner: oracle
    group: oinstall
    path: /home/oracle/.bash_profile
    marker: "# {mark} ORACLE DB env params"
    block: |
      . /home/oracle/.oraenv.{{ DB_NAME }}.sh
  when: stat_oraenv_result.stat.exists == False 


#- name: run script orainstRoot.sh
#  become: yes
#  become_method: sudo
#  become_user: root

#  #command: '{{ INSTALL_ORA_BASE }}/oraInventory/orainstRoot.sh'
#  command: '/home/oracle/oraInventory/orainstRoot.sh'
#  #command: '/opt/oraInventory/orainstRoot.sh'
  
#  #when: stat_result_home.stat.isdir is not defined 




# testing
#vi /u01/app/oracle/product/11.2.0.4/dbhome_1/oraInst.loc
#vi /u01/app/oracle/product/11.2.0.4/dbhome_1/clone/config/cs.properties
#cd /u01/app/oracle/product/11.2.0.4/dbhome_1/clone/bin
#/u01/app/oracle/product/11.2.0.4/dbhome_1/perl/bin/perl /u01/app/oracle/product/11.2.0.4/dbhome_1/clone/bin/clone.pl ORACLE_BASE=/u01/app/oracle ORACLE_HOME=/u01/app/oracle/product/11.2.0.4/dbhome_1 OSDBA_GROUP=dba OSOPER_GROUP=dba -defaultHomeName

